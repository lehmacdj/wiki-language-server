name:                wiki-language-server
version:             0.1.0.0
github:              "lehmacdj/wiki-language-server"
license:             AGPL-3.0
author:              "Devin Lehmacher"
maintainer:          "lehmacdj@gmail.com"
copyright:           "2022 Devin Lehmacher"
synopsis:            An LSP implementation for wiki style markdown notes.
category:            LSP
description:
  An implementation of an LSP for wiki style markdown notes. The goal is that
  using this with a fairly default LSP setup for your text editor gives you
  functionality like following wiki style / other links + autocompletion for
  link names through the LSP completion function. For further info please see
  <https://github.com/lehmacdj/wiki-language-server#readme>.

extra-source-files:
- README.md
- ChangeLog.md

ghc-options:
- -Wall
- -Wno-name-shadowing
- -fplugin=Effectful.Plugin

dependencies:
- aeson
- base >= 4.7 && < 5
- bytestring
- classy-prelude
- co-log-core
- commonmark
- commonmark-extensions
- commonmark-pandoc
- containers
- data-default
- directory
- effectful
- effectful-core
- effectful-plugin
- effectful-th
- exceptions
- filepath
- fuzzy # - fuzzyfind alternate fuzzy finding library, maybe worth trying
- generic-lens
# - ki-effectful (ki, but for effectful if I want to do actually fancy concurrency things)
- lens
- lsp
- lsp-types
- megaparsec
- monad-control
- mtl
- pandoc-types
- parsec
- parser-combinators
- prettyprinter
- prettyprinter-ansi-terminal
- safe-exceptions
- sqlite-simple
- strict-mutable-base
- template-haskell
- text
- th-lift-instances
- time
- transformers
- unbounded-delays
- unliftio
- xdg-basedir
# test dependencies, trying to keep these separate even though they are required
# by the main lib because our tests are in tree.
- hspec
- hspec-expectations
- quickcheck-instances
- tasty
- tasty-discover
- tasty-golden
- tasty-hspec
- tasty-hunit
- tasty-quickcheck


default-extensions:
- BangPatterns
- BlockArguments
- CApiFFI
- ConstraintKinds
- DataKinds
- DefaultSignatures
- DeriveAnyClass
- DeriveFoldable
- DeriveFunctor
- DeriveGeneric
- DeriveTraversable
- DerivingStrategies
- DerivingVia
- DisambiguateRecordFields
- DuplicateRecordFields
- FlexibleContexts
- FlexibleInstances
- FunctionalDependencies
- GADTs
- GeneralizedNewtypeDeriving
- ImportQualifiedPost
- ImpredicativeTypes
- LambdaCase
- MultiParamTypeClasses
- NamedFieldPuns
- NoFieldSelectors
- NoImplicitPrelude
- NumericUnderscores
- OverloadedLabels
- OverloadedRecordDot
- OverloadedStrings
- PatternSynonyms
- PolyKinds
- QuantifiedConstraints
- QuasiQuotes
- RankNTypes
- RecordWildCards
- ScopedTypeVariables
- StandaloneDeriving
- StandaloneKindSignatures
- StrictData
- TemplateHaskell
- TemplateHaskellQuotes
- TupleSections
- TypeApplications
- TypeFamilies
- TypeOperators
- TypeSynonymInstances
- ViewPatterns

library:
  source-dirs: src

executables:
  wiki-language-server:
    main:                Main.hs
    source-dirs:         app
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    # TODO: use low latency GC because good idea for LSP
    dependencies:
    - wiki-language-server

tests:
  wiki-language-server-test:
    main:                Main.hs
    source-dirs:         test
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    dependencies:
    - wiki-language-server
